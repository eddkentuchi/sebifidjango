# Generated by Django 4.2.2 on 2023-07-17 18:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('polls', '0004_delete_mimodelo_delete_tblestado'),
    ]

    operations = [
        migrations.CreateModel(
            name='AsignacionBancos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'asignacion_bancos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AsignacionModulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'asignacion_modulo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bancos',
            fields=[
                ('banco_id', models.AutoField(db_comment='Identificador del banco', primary_key=True, serialize=False)),
                ('banco', models.CharField(db_comment='Nombre del banco', max_length=255, unique=True)),
            ],
            options={
                'db_table': 'bancos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cartera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expediente', models.CharField(blank=True, max_length=50, null=True)),
                ('nombre', models.CharField(blank=True, max_length=250, null=True)),
                ('primer_apellido', models.CharField(blank=True, max_length=250, null=True)),
                ('segundo_apellido', models.CharField(blank=True, max_length=250, null=True)),
                ('fecha_nacimiento', models.CharField(blank=True, max_length=50, null=True)),
                ('no_identificacion', models.CharField(blank=True, max_length=100, null=True)),
                ('grupo', models.CharField(blank=True, max_length=100, null=True)),
                ('no_grupo', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_operacion', models.CharField(blank=True, max_length=50, null=True)),
                ('plazo', models.IntegerField(blank=True, null=True)),
                ('telefono', models.CharField(blank=True, max_length=50, null=True)),
                ('calle', models.CharField(blank=True, max_length=250, null=True)),
                ('colonia', models.CharField(blank=True, max_length=250, null=True)),
                ('codigo_postal', models.CharField(blank=True, max_length=50, null=True)),
                ('alcaldia', models.CharField(blank=True, max_length=100, null=True)),
                ('monto_credito', models.FloatField(blank=True, null=True)),
                ('entrega', models.CharField(blank=True, max_length=50, null=True)),
                ('estatus_credito', models.CharField(blank=True, max_length=50, null=True)),
                ('saldo_credito', models.FloatField(blank=True, null=True)),
                ('tipo_credito', models.CharField(blank=True, max_length=150, null=True)),
                ('nombre_completo', models.CharField(blank=True, max_length=500, null=True)),
                ('tipo_usuario', models.CharField(blank=True, max_length=50, null=True)),
                ('curp', models.CharField(blank=True, max_length=50, null=True)),
                ('mensaje', models.CharField(blank=True, max_length=150, null=True)),
                ('saldo_final', models.CharField(blank=True, max_length=50, null=True)),
                ('estatus_fecha', models.CharField(blank=True, null=True)),
                ('estatus_curp', models.CharField(blank=True, null=True)),
                ('fecha_liberacion', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cartera',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CasosLegales',
            fields=[
                ('legal_id', models.AutoField(db_comment='Identificador del expediente legal', primary_key=True, serialize=False)),
                ('credito_id', models.IntegerField(blank=True, db_comment='Identificador del crédito', null=True)),
                ('fecha_inicio', models.DateField(db_comment='Fecha del inicio del proceso legal')),
                ('fecha_fin', models.DateField(blank=True, db_comment='Fecha del termino del proceso legal', null=True)),
                ('caso_legal', models.TextField(blank=True, db_comment='Descripción del caso legal', null=True)),
            ],
            options={
                'db_table': 'casos_legales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cobranzas',
            fields=[
                ('cobranza_id', models.AutoField(db_comment='Identificador de cobranza', primary_key=True, serialize=False)),
                ('fecha_inicio', models.DateField(db_comment='Fecha de inicio de cobranza')),
                ('fecha_fin', models.DateField(blank=True, db_comment='Fecha de termino de cobranza', null=True)),
                ('cobranza', models.TextField(blank=True, db_comment='Descripción de cobranza', null=True)),
            ],
            options={
                'db_table': 'cobranzas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Codigospostales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_codigo', models.IntegerField(blank=True, null=True)),
                ('d_asenta', models.CharField(blank=True, null=True)),
                ('d_tipo_asenta', models.CharField(blank=True, null=True)),
                ('d_mnpio', models.CharField(blank=True, null=True)),
                ('d_estado', models.CharField(blank=True, null=True)),
                ('d_ciudad', models.CharField(blank=True, null=True)),
                ('d_cp', models.CharField(blank=True, null=True)),
                ('c_estado', models.IntegerField(blank=True, null=True)),
                ('c_oficina', models.IntegerField(blank=True, null=True)),
                ('c_cp', models.CharField(blank=True, null=True)),
                ('c_tipo_asenta', models.IntegerField(blank=True, null=True)),
                ('c_mnpio', models.IntegerField(blank=True, null=True)),
                ('id_asenta_cpcons', models.IntegerField(blank=True, null=True)),
                ('d_zona', models.CharField(blank=True, null=True)),
                ('c_cve_ciudad', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'codigospostales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Colonias',
            fields=[
                ('colonia_id', models.AutoField(db_comment='Identificador de colonia', primary_key=True, serialize=False)),
                ('colonia', models.CharField(db_comment='Nombre de la colonia', max_length=255)),
                ('codigo_postal', models.CharField(blank=True, db_comment='Código Postal', max_length=10, null=True)),
                ('tipo_asentamiento', models.CharField(blank=True, db_comment='Tipo de asentamiento', max_length=50, null=True)),
                ('es_prioritaria', models.IntegerField(blank=True, db_comment='Especifica si es colonia prioritaria', null=True)),
            ],
            options={
                'db_table': 'colonias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Creditos',
            fields=[
                ('credito_id', models.AutoField(db_comment='Llave primaria del crédito', primary_key=True, serialize=False)),
                ('folio', models.CharField(db_comment='Folio del crédito individual o grupal', max_length=255, unique=True)),
                ('fecha_solicitud', models.DateField(db_comment='Fecha de solicitud del crédito')),
                ('monto_asignado', models.DecimalField(db_comment='Monto autorizado del crédito', decimal_places=65535, max_digits=65535)),
                ('numero_plazos', models.IntegerField(db_comment='Números de plazos')),
                ('numero_pagos', models.IntegerField(db_comment='Número de pagos')),
                ('numero_periodo_gracia', models.IntegerField(db_comment='Número de periodo de gracia')),
                ('monto_garantia', models.DecimalField(blank=True, db_comment='Monto de la garantia', decimal_places=65535, max_digits=65535, null=True)),
                ('referencia_bancaria', models.CharField(blank=True, db_comment='Referencia bancaria asignada para el pago en bancos', max_length=255, null=True, unique=True)),
                ('fecha_formalizacion', models.DateField(blank=True, db_comment='Fecha de formalización', null=True)),
                ('fecha_inicial_cobro', models.DateField(db_comment='Fecha inicial en la que se puede ir a cobrar el crédito al banco')),
                ('fecha_final_cobro', models.DateField(blank=True, db_comment='Fecha máxima en la que se puede ir a cobrar el crédito al banco', null=True)),
                ('fecha_primer_pago', models.DateField(blank=True, db_comment='Fecha del primer pago', null=True)),
                ('estatus_general', models.CharField(blank=True, db_comment='Estatus general del crédito', max_length=50, null=True)),
                ('monto_pago', models.DecimalField(blank=True, db_comment='Importe del pago de 1 a n-1', decimal_places=65535, max_digits=65535, null=True)),
                ('monto_pago_final', models.DecimalField(blank=True, db_comment='importe del pago final para obtener un monto cerrado', decimal_places=65535, max_digits=65535, null=True)),
                ('monto_asignado_letra', models.CharField(blank=True, db_comment='Monto asisgando de crédito escrito en letra para formatos', max_length=255, null=True)),
            ],
            options={
                'db_table': 'creditos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Direcciones',
            fields=[
                ('direccion_id', models.AutoField(db_comment='Identificador de la dirección', primary_key=True, serialize=False)),
                ('alias', models.CharField(db_comment='alias de la dirección "Casa" "Oficina"', max_length=50)),
                ('calle', models.CharField(blank=True, db_comment='Nombre de la calle', max_length=255, null=True)),
                ('num_exterior', models.CharField(blank=True, db_comment='Número exterior', max_length=10, null=True)),
                ('num_interior', models.CharField(blank=True, db_comment='Número interior', max_length=10, null=True)),
                ('colonia_id', models.IntegerField(blank=True, db_comment='Identificador de la colonia', null=True)),
                ('telefono_fijo', models.CharField(blank=True, db_comment='Teléfono fijo del domicilio', max_length=15, null=True)),
                ('entre_calles', models.CharField(blank=True, db_comment='Calles entre las que se encuentra el domicilio', max_length=500, null=True)),
                ('referencia_domicilio', models.CharField(blank=True, db_comment='Datos de referencia para ubicar el domicilio', max_length=500, null=True)),
                ('editable', models.IntegerField(blank=True, db_comment='Indica si es permitida la edición del registro', null=True)),
            ],
            options={
                'db_table': 'direcciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Documentos',
            fields=[
                ('documento_id', models.AutoField(db_comment='identificador del documento', primary_key=True, serialize=False)),
                ('tipo_documento', models.CharField(blank=True, db_comment='Nombre del tipo de documento', max_length=255, null=True)),
                ('ruta_documento', models.CharField(blank=True, db_comment='Ubicación de la carpeta donde se encuentra el documento', max_length=255, null=True)),
                ('nombre_documento', models.CharField(blank=True, db_comment='Nombre del archivo del documento', max_length=255, null=True)),
                ('uid_documento', models.CharField(blank=True, db_comment='UID del documento', max_length=255, null=True)),
            ],
            options={
                'db_table': 'documentos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstadoCivil',
            fields=[
                ('estado_civil_id', models.IntegerField(primary_key=True, serialize=False)),
                ('estado_civil', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'estado_civil',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estados',
            fields=[
                ('estado_id', models.AutoField(db_comment='Identificador del estado', primary_key=True, serialize=False)),
                ('estado', models.CharField(db_comment='Nombre del estado', max_length=255)),
                ('abreviatura', models.CharField(blank=True, db_comment='Abreviatura del estado acorde al CURP', max_length=10, null=True)),
                ('pais', models.CharField(blank=True, db_comment='País del estado', max_length=10, null=True)),
            ],
            options={
                'db_table': 'estados',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstadosLegales',
            fields=[
                ('estado_legal_id', models.AutoField(db_comment='Identificador del estado legal', primary_key=True, serialize=False)),
                ('estado_legal', models.CharField(db_comment='Estado legal', max_length=255, unique=True)),
            ],
            options={
                'db_table': 'estados_legales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstadosProceso',
            fields=[
                ('estado_proceso_id', models.AutoField(db_comment='Identificador del estado del proceso', primary_key=True, serialize=False)),
                ('estado_proceso', models.CharField(db_comment='Estado del proceso', max_length=255, unique=True)),
            ],
            options={
                'db_table': 'estados_proceso',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Etnia',
            fields=[
                ('etnia_id', models.IntegerField(primary_key=True, serialize=False)),
                ('etnia', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'etnia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Expediente',
            fields=[
                ('expediente_id', models.BigAutoField(db_comment='Identificador autonumerico del expediente se mantiene en nivel 4 y 5 donde el grupo puede separarse', primary_key=True, serialize=False)),
                ('expediente', models.CharField(blank=True, db_comment='Folio del expediente FDSO + ID', max_length=50, null=True)),
                ('hash_expediente', models.CharField(blank=True, db_comment='HASH para encripción de elementos', max_length=250, null=True)),
            ],
            options={
                'db_table': 'expediente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extranjero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curp', models.CharField(blank=True, db_comment='CURP de persona extranjera', max_length=18, null=True)),
                ('documento_acreditacion', models.CharField(blank=True, db_comment='Nombre del documento que acredita su estatus migratorio', max_length=50, null=True)),
                ('fecha_vencimiento', models.DateField(blank=True, db_comment='Fecha de vencimiento del documento', null=True)),
                ('actividad_autorizada', models.CharField(blank=True, db_comment='Actividad autorizada', max_length=50, null=True)),
            ],
            options={
                'db_table': 'extranjero',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Giros',
            fields=[
                ('giro_id', models.AutoField(db_comment='Identificador del giro', primary_key=True, serialize=False)),
                ('giro', models.CharField(db_comment='Giro del negocio', max_length=255, unique=True)),
            ],
            options={
                'db_table': 'giros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('grupo_id', models.BigAutoField(db_comment='Identificador del grupo', primary_key=True, serialize=False)),
                ('nombre_grupo', models.CharField(blank=True, db_comment='Nombre del grupo si es individual es el nombre del titular', max_length=120, null=True)),
                ('tipo_grupo_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'grupo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('log_id', models.AutoField(db_comment='Identificador del LOG', primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(db_comment='Fecha del registro')),
                ('modulo', models.CharField(db_comment='Módulo al que pertenece el registro', max_length=50)),
                ('accion', models.CharField(db_comment='Acción realizada', max_length=50)),
                ('categoria', models.CharField(db_comment='Categoría del mensaje', max_length=50)),
                ('usuario', models.CharField(db_comment='Usuario que realizó la acción', max_length=255)),
                ('ip', models.CharField(db_comment='IP desde la que se realizó la acción', max_length=255)),
                ('comentario', models.TextField(db_comment='Comentario o mensjae de error detallado')),
            ],
            options={
                'db_table': 'log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metadatos',
            fields=[
                ('metadato_id', models.AutoField(db_comment='identificador del registro de metadatos', primary_key=True, serialize=False)),
                ('clave', models.CharField(db_comment='Clave única del metadato', max_length=255, unique=True)),
                ('valor', models.CharField(db_comment='Valor del metadato', max_length=255)),
                ('descripcion', models.TextField(blank=True, db_comment='Descripción para entender el uso del metadato', null=True)),
            ],
            options={
                'db_table': 'metadatos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modulo',
            fields=[
                ('modulo_id', models.AutoField(db_comment='Identificador del módulo', primary_key=True, serialize=False)),
                ('modulo', models.CharField(db_comment='Nombre del módulo', max_length=255, unique=True)),
                ('zona', models.CharField(db_comment='Nombre de la zona a la pertenece el módulo', max_length=255)),
                ('alcaldia', models.CharField(db_comment='Alcaldía a la que pertenece el módulo', max_length=255)),
            ],
            options={
                'db_table': 'modulo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Municipios',
            fields=[
                ('municipio_id', models.AutoField(db_comment='identificador del municipio', primary_key=True, serialize=False)),
                ('municipio', models.CharField(db_comment='Nombre del municipio', max_length=255)),
            ],
            options={
                'db_table': 'municipios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Negocio',
            fields=[
                ('negocio_id', models.AutoField(db_comment='Identificador númerico unico y auto generado del negocio', primary_key=True, serialize=False)),
                ('denominacion_razon_social', models.CharField(db_comment='Denominación o razón social', max_length=255)),
                ('rfc', models.CharField(db_comment='Registro Federal de Contribuyentes R.F.C del negocio', max_length=13, unique=True)),
                ('telefono_negocio', models.CharField(blank=True, db_comment='Télefono del negocio', max_length=15, null=True)),
                ('email', models.CharField(blank=True, db_comment='Correo del negocio', max_length=255, null=True)),
                ('numero_acta_constitutiva', models.CharField(blank=True, db_comment='Número o Folio del acta constitutiva', max_length=50, null=True)),
                ('fecha_otorgamiento', models.DateField(blank=True, db_comment='Fecha de otorgamiento del acta constitutiva', null=True)),
                ('nombre_quien_expide', models.CharField(blank=True, db_comment='Nombre del notario, corredor público o alcardía que expide', max_length=255, null=True)),
                ('numero_notaria', models.CharField(blank=True, db_comment='Número de la notaria o correduría', max_length=50, null=True)),
                ('entidad_federativa_acta', models.CharField(blank=True, db_comment='Entidad Federativa donde se expidio el Acta constitutiva o póliza', max_length=50, null=True)),
                ('numero_registro_publico', models.CharField(blank=True, db_comment='Folio ó Número de Inscripción en el Registro Público de la Propiedad y de Comercio', max_length=50, null=True)),
                ('fecha_registro_publico', models.DateField(blank=True, db_comment='Fecha de inscripción en el Registro Público de la Propiedad y de Comercio', null=True)),
                ('tipo_poder', models.CharField(blank=True, db_comment='Tipo de Poder Notarial con el que acredita la representación', max_length=50, null=True)),
                ('numero_poder', models.CharField(blank=True, db_comment='Número o Folio del Instrumento o documento con el que acredita la representación', max_length=50, null=True)),
                ('nombre_notario_poder', models.CharField(blank=True, db_comment='Nombre del Notario Corredor Público o Juez del instrumento o documento con el que acredita la representación', max_length=255, null=True)),
                ('numero_notaria_poder', models.CharField(blank=True, db_comment='Número de Notaría Correduría o Juzgado del instrumento o documento con el que acredita la representación', max_length=50, null=True)),
                ('entidad_federativa_poder', models.CharField(blank=True, db_comment='Entidad Federativa del Instrumento o documento con el que acredita la representación', max_length=50, null=True)),
                ('registro_publico_poder', models.CharField(blank=True, db_comment='Inscripción en el Registro Público de la Propiedad y de Comercio del instrumento o documento con el que acredita la representación', max_length=50, null=True)),
            ],
            options={
                'db_table': 'negocio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NivelesCredito',
            fields=[
                ('nivel_credito_id', models.AutoField(db_comment='Llave primaria de niveles de Crédito', primary_key=True, serialize=False)),
                ('nivel', models.IntegerField(db_comment='Número de nivel')),
                ('numero_plazos', models.IntegerField(blank=True, db_comment='Número de plazos del nivel de crédito', null=True)),
                ('monto_minimo', models.DecimalField(blank=True, db_comment='Monto mínimo otorgable para el nivel de crédito', decimal_places=65535, max_digits=65535, null=True)),
                ('monto_maximo', models.DecimalField(blank=True, db_comment='Monto máximo otorgable para el nivel de crédito', decimal_places=65535, max_digits=65535, null=True)),
                ('tasa_ordinaria', models.DecimalField(blank=True, db_comment='Tasa de interes ordinaria del nivel de crédito', decimal_places=65535, max_digits=65535, null=True)),
                ('tasa_moratoria', models.DecimalField(blank=True, db_comment='Tasa de interes moratorio del nivel de crédito', decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'niveles_credito',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pagos',
            fields=[
                ('pago_id', models.AutoField(db_comment='Identificador del pago', primary_key=True, serialize=False)),
                ('fecha_pago', models.DateField(db_comment='Fecha del pago')),
                ('metodo_pago', models.CharField(db_comment='Método de pago', max_length=255)),
                ('referencia_bancaria', models.CharField(blank=True, db_comment='Referencia bancaria', max_length=255, null=True)),
                ('interes', models.DecimalField(blank=True, db_comment='Monto de los intereses pagados', decimal_places=65535, max_digits=65535, null=True)),
                ('capital', models.DecimalField(blank=True, db_comment='Monto del pago a capital', decimal_places=65535, max_digits=65535, null=True)),
                ('seguro', models.DecimalField(blank=True, db_comment='Monto del pago del seguro', decimal_places=65535, max_digits=65535, null=True)),
                ('pago_total', models.DecimalField(blank=True, db_comment='Monto del pago total', decimal_places=65535, max_digits=65535, null=True)),
                ('numero_pago', models.IntegerField(blank=True, db_comment='Número de pago realizado', null=True)),
            ],
            options={
                'db_table': 'pagos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParametrosGenerales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parametro_general_id', models.IntegerField(db_comment='Identificador del parámetro')),
                ('clave', models.CharField(blank=True, db_comment='Clave del parámetro', max_length=50, null=True)),
                ('valor', models.CharField(blank=True, db_comment='Valor del parámetro', max_length=255, null=True)),
                ('vigencia', models.CharField(blank=True, db_comment='Vigencia del parametro', max_length=50, null=True)),
                ('descripcion', models.TextField(blank=True, db_comment='Descripción del parámetro', null=True)),
            ],
            options={
                'db_table': 'parametros_generales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Periodicidad',
            fields=[
                ('periodicidad_id', models.AutoField(db_comment='llave primaria del plazo', primary_key=True, serialize=False)),
                ('tipo_plazo', models.CharField(db_comment='Descripción del tipo de plazo Mensual, Quincenal, etc.', max_length=255)),
            ],
            options={
                'db_table': 'periodicidad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegistroProceso',
            fields=[
                ('registro_proceso_id', models.AutoField(db_comment='Identificador del registro del proceso', primary_key=True, serialize=False)),
                ('fecha_cambio_estado', models.DateField(db_comment='Fecha del cambio de estado')),
                ('responsable_id', models.IntegerField(db_comment='Identificador del responsable')),
            ],
            options={
                'db_table': 'registro_proceso',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelDireccionCurp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curp', models.CharField(db_comment='CURP', max_length=18)),
                ('direccion_id', models.IntegerField(db_comment='Identificador de la dirección')),
                ('fecha_vigencia', models.DateField(db_comment='Fecha de vigencia')),
                ('editable', models.IntegerField(db_comment='Indica si el registro se puede editar')),
            ],
            options={
                'db_table': 'rel_direccion_curp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelDireccionNegocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('negocio_id', models.IntegerField(db_comment='Identificador del negocio')),
                ('direccion_id', models.IntegerField(db_comment='Identificador de la dirección')),
                ('fecha_vigencia', models.DateField(db_comment='Fecha de vigencia')),
                ('editable', models.IntegerField(db_comment='Indica si el registro permite la edición')),
            ],
            options={
                'db_table': 'rel_direccion_negocio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelExpedienteCredito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expediente_id', models.BigIntegerField(blank=True, null=True)),
                ('credito_id', models.BigIntegerField(blank=True, null=True)),
                ('sesion_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_expediente_credito',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelExpedienteCurp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expediente_id', models.BigIntegerField(blank=True, null=True)),
                ('grupo_id', models.BigIntegerField(blank=True, db_comment='Identificador del grupo', null=True)),
                ('curp', models.CharField(blank=True, db_comment='CURP de los solicitantes', max_length=18, null=True)),
                ('es_obligado_solidario', models.BooleanField(blank=True, db_comment='Indica si es obligado solidario, en un crédito grupal todos son obligados solidarios', null=True)),
                ('es_representante', models.BooleanField(blank=True, db_comment='Indica si es responsable o titular del grupo o representante legal', null=True)),
                ('secuencial', models.IntegerField(blank=True, db_comment='Registra la secuencia del alta de lis integrantes del grupo', null=True)),
                ('negocio_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rel_expediente_curp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('rol_id', models.AutoField(db_comment='Identificador del ROL', primary_key=True, serialize=False)),
                ('rol', models.CharField(db_comment='Nombre del ROL', max_length=255)),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sectores',
            fields=[
                ('sector_id', models.AutoField(db_comment='Identificador del sector', primary_key=True, serialize=False)),
                ('sector', models.CharField(db_comment='Nombre del sector', max_length=255, unique=True)),
            ],
            options={
                'db_table': 'sectores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seguros',
            fields=[
                ('seguro_id', models.AutoField(db_comment='Llave primaria de Seguro contratado', primary_key=True, serialize=False)),
                ('costo', models.DecimalField(blank=True, db_comment='Costo del seguro', decimal_places=65535, max_digits=65535, null=True)),
                ('tipo', models.CharField(blank=True, db_comment='Tipo de seguro contratado', max_length=255, null=True)),
                ('aseguradora', models.CharField(blank=True, db_comment='Nombre de la aseguradora', max_length=255, null=True)),
                ('vigencia', models.DateField(blank=True, db_comment='Fecha de vigencia de la póliza', null=True)),
                ('poliza', models.CharField(blank=True, db_comment='Número o folio de la póliza', max_length=255, null=True)),
                ('numero_renovacion', models.IntegerField(blank=True, db_comment='Número de renovación actual', null=True)),
                ('renovaciones', models.IntegerField(blank=True, db_comment='Número máximo de renovaciones', null=True)),
                ('tipo_renovacion', models.CharField(blank=True, db_comment='Tipo de renovación anual, semestral', null=True)),
            ],
            options={
                'db_table': 'seguros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sesiones',
            fields=[
                ('sesion_id', models.AutoField(db_comment='Identificador de la sesión', primary_key=True, serialize=False)),
                ('sesion', models.CharField(blank=True, db_comment='Nombre de la sesión', max_length=50, null=True)),
                ('fecha_sesion', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sesiones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sexo',
            fields=[
                ('sexo_id', models.AutoField(primary_key=True, serialize=False)),
                ('sexo', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'sexo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Solicitantes',
            fields=[
                ('curp', models.CharField(db_comment='CURP del solicitante', max_length=18, primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_comment='Nombre(s) del solicitante', max_length=255)),
                ('primer_apellido', models.CharField(db_comment='primer apellido del solicitante', max_length=255)),
                ('segundo_apellido', models.CharField(blank=True, db_comment='Segundo apellido del solicitante', max_length=255, null=True)),
                ('telefono', models.CharField(blank=True, db_comment='Teléfono móvil del solicitante', max_length=15, null=True)),
                ('email', models.CharField(blank=True, db_comment='Correo electrónico del solicitante', max_length=255, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, db_comment='Fecha de nacimiento del solicitante', null=True)),
                ('grupo_vulnerable', models.BooleanField(blank=True, db_comment='Indica si el solicitante pertenece a un grupo vulnerable', null=True)),
                ('grupo_prioritario', models.BooleanField(blank=True, db_comment='Indica si el solicitante pertenece a un grupo prioritario', null=True)),
                ('identificacion_oficial', models.CharField(blank=True, db_comment='Nombre de la identificación oficial', max_length=50, null=True)),
                ('numero_identificacion', models.CharField(blank=True, db_comment='Número de la identificación oficial', max_length=50, null=True)),
                ('nacionalidad', models.CharField(blank=True, db_comment='Nacionalidad', max_length=50, null=True)),
                ('hash', models.CharField(blank=True, db_comment='Hash de la solicitud', max_length=128, null=True)),
            ],
            options={
                'db_table': 'solicitantes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TipoGrupo',
            fields=[
                ('tipo_grupo_id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_grupo', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'tipo_grupo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TipoPoblacion',
            fields=[
                ('tipo_poblacion_id', models.IntegerField(primary_key=True, serialize=False)),
                ('tipo_poblacion', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'tipo_poblacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TiposCobranza',
            fields=[
                ('cobranza_id', models.AutoField(db_comment='Identificador de cobranza', primary_key=True, serialize=False)),
                ('cobranza', models.CharField(db_comment='Nombre de la cobranza', max_length=255, unique=True)),
            ],
            options={
                'db_table': 'tipos_cobranza',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TiposCredito',
            fields=[
                ('tipo_credito_id', models.AutoField(db_comment='Llave del tipo de crédito', primary_key=True, serialize=False)),
                ('codigo', models.CharField(db_comment='Código de referencia del crédito', max_length=4, unique=True)),
                ('tipo_credito', models.CharField(db_comment='Nombre del crédito', max_length=255)),
                ('descripcion_tipo_credito', models.CharField(blank=True, db_comment='Descripción a mostrar del crédito', max_length=500, null=True)),
                ('objetivo', models.CharField(blank=True, db_comment='Objetivo a mostrar del crédito', max_length=500, null=True)),
                ('requisitos', models.CharField(blank=True, db_comment='Requisitos a mostrar del crédito', max_length=500, null=True)),
                ('procedimiento', models.CharField(blank=True, db_comment='Procedimiento a mostrar del crédito', max_length=500, null=True)),
            ],
            options={
                'db_table': 'tipos_credito',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TiposGarantia',
            fields=[
                ('tipo_garantia_id', models.AutoField(db_comment='Identificador de la garantia', primary_key=True, serialize=False)),
                ('garantia', models.CharField(blank=True, db_comment='Descripción de la garantia', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tipos_garantia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('usuario_id', models.AutoField(db_comment='Identificador del usuario', primary_key=True, serialize=False)),
                ('nombre_usuario', models.CharField(db_comment='Nombre el usuario', max_length=255, unique=True)),
                ('contrasena', models.CharField(db_comment='Contraseña del usuario', max_length=255)),
                ('email', models.CharField(blank=True, db_comment='Correo electrónico del usuario', max_length=255, null=True)),
                ('activo', models.BooleanField(blank=True, db_comment='Indica si el usuario esta activo', null=True)),
            ],
            options={
                'db_table': 'usuarios',
                'managed': False,
            },
        ),
    ]
